// Code generated by MockGen. DO NOT EDIT.
// Source: registration.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	schema "github.com/ex-rate/auth-service/internal/schemas"
	gomock "github.com/golang/mock/gomock"
)

// MockregistrationRepo is a mock of registrationRepo interface.
type MockregistrationRepo struct {
	ctrl     *gomock.Controller
	recorder *MockregistrationRepoMockRecorder
}

// MockregistrationRepoMockRecorder is the mock recorder for MockregistrationRepo.
type MockregistrationRepoMockRecorder struct {
	mock *MockregistrationRepo
}

// NewMockregistrationRepo creates a new mock instance.
func NewMockregistrationRepo(ctrl *gomock.Controller) *MockregistrationRepo {
	mock := &MockregistrationRepo{ctrl: ctrl}
	mock.recorder = &MockregistrationRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockregistrationRepo) EXPECT() *MockregistrationRepoMockRecorder {
	return m.recorder
}

// CreateUser mocks base method.
func (m *MockregistrationRepo) CreateUser(ctx context.Context, reg schema.Registration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateUser", ctx, reg)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateUser indicates an expected call of CreateUser.
func (mr *MockregistrationRepoMockRecorder) CreateUser(ctx, reg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateUser", reflect.TypeOf((*MockregistrationRepo)(nil).CreateUser), ctx, reg)
}

// Mocktoken is a mock of token interface.
type Mocktoken struct {
	ctrl     *gomock.Controller
	recorder *MocktokenMockRecorder
}

// MocktokenMockRecorder is the mock recorder for Mocktoken.
type MocktokenMockRecorder struct {
	mock *Mocktoken
}

// NewMocktoken creates a new mock instance.
func NewMocktoken(ctrl *gomock.Controller) *Mocktoken {
	mock := &Mocktoken{ctrl: ctrl}
	mock.recorder = &MocktokenMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *Mocktoken) EXPECT() *MocktokenMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *Mocktoken) GenerateToken(reg schema.Registration) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", reg)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MocktokenMockRecorder) GenerateToken(reg interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*Mocktoken)(nil).GenerateToken), reg)
}
