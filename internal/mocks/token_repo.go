// Code generated by MockGen. DO NOT EDIT.
// Source: token.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	reflect "reflect"

	entities "github.com/ex-rate/auth-service/internal/entities"
	gomock "github.com/golang/mock/gomock"
)

// MocktokenRepo is a mock of tokenRepo interface.
type MocktokenRepo struct {
	ctrl     *gomock.Controller
	recorder *MocktokenRepoMockRecorder
}

// MocktokenRepoMockRecorder is the mock recorder for MocktokenRepo.
type MocktokenRepoMockRecorder struct {
	mock *MocktokenRepo
}

// NewMocktokenRepo creates a new mock instance.
func NewMocktokenRepo(ctrl *gomock.Controller) *MocktokenRepo {
	mock := &MocktokenRepo{ctrl: ctrl}
	mock.recorder = &MocktokenRepoMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MocktokenRepo) EXPECT() *MocktokenRepoMockRecorder {
	return m.recorder
}

// CheckToken mocks base method.
func (m *MocktokenRepo) CheckToken(ctx context.Context, token *entities.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckToken indicates an expected call of CheckToken.
func (mr *MocktokenRepoMockRecorder) CheckToken(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckToken", reflect.TypeOf((*MocktokenRepo)(nil).CheckToken), ctx, token)
}

// CreateToken mocks base method.
func (m *MocktokenRepo) CreateToken(ctx context.Context, token *entities.Token) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateToken", ctx, token)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateToken indicates an expected call of CreateToken.
func (mr *MocktokenRepoMockRecorder) CreateToken(ctx, token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateToken", reflect.TypeOf((*MocktokenRepo)(nil).CreateToken), ctx, token)
}
